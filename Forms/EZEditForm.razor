@implements IDisposable
@typeparam TModel where TModel : new()

<div class="container-fluid">
    @if(Recordset == null)
    {
        <p>Loading...</p>
    }
    else
    {
        @foreach (var _record in Recordset.Records)
        {
            @if (_record != null)
            {
                <EZEditFormSub TModel="TModel" Record="_record" >
                    <InputArea >
                        @InputArea(context)
                    </InputArea>
                </EZEditFormSub>
            }
        }
    }
</div>

@code {
    [Parameter, EditorRequired] public EZRecordset<TModel>? Recordset { get; set; }
    [Parameter] public RenderFragment<TModel> InputArea { get; set; }

    protected override void OnParametersSet()
    {
        Recordset.AddOnChangeListeners(RefreshForm);
        base.OnParametersSet();
    }

    public void RefreshForm()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        Recordset.RemoveOnChangeListeners(RefreshForm);
    }
}
