@using System.Reflection
@typeparam TModel

@if (IsHeader)
{
    <th class="@cssClass">@Header</th>
}
else
{
    <td class="@cssClass">
        @if (ChildContent is null) {
            if (Hyperlink is null)
            {
                @Value
            }
            else
            {
                <a href="@(String.Format(Hyperlink, @Value))">@Value</a>
            }
        }
        else {
            @ChildContent
        }
    </td>
}

@code {
    [CascadingParameter(Name = "DataContext")] public object? DataContext { get; set; }
    [CascadingParameter(Name = "IsHeader")] public bool IsHeader { get; set; }
    [CascadingParameter(Name = "FieldInfo")] public Dictionary<string, EZField>? FieldInfo { get; set; }

    [Parameter, EditorRequired] public string Field { get; set; } = string.Empty;
    [Parameter] public string? Header { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public string? Hyperlink { get; set; }

    protected string Value { get; set; } = string.Empty;
    protected string? header;
    private string? cssClass;

    protected override void OnInitialized()
    {
        EZField field;
        if (FieldInfo is null)
        {
            field = new(typeof(TModel), Field);
        }
        else
        {
            field = FieldInfo[Field];
        }
        if (field.PropertyType.IsNumeric() || field.PropertyType.IsDate())
        {
            cssClass = "text-right";
        }
        if (IsHeader) {
            Header = Header ?? field.DisplayShortName;
        }
        else
        {
            if (DataContext is null) Value = "error";
            else Value = field.ValueAsString(DataContext);
        }

        base.OnInitialized();
    }
}
